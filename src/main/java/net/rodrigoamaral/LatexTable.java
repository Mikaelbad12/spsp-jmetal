package net.rodrigoamaral;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public class LatexTable {

	private static final String SEPARATOR = " & ";

	public static void main(String args[]) {
        String instance = "ST10_DT10_SE10_DE1_SK4-5 ST10_DT10_SE10_DE1_SK6-7 ST10_DT10_SE15_DE1_SK4-5 ST10_DT10_SE15_DE1_SK6-7 ST10_DT10_SE5_DE1_SK4-5 ST10_DT10_SE5_DE1_SK6-7 ST20_DT10_SE10_DE1_SK4-5 ST20_DT10_SE10_DE1_SK6-7 ST20_DT10_SE15_DE1_SK4-5 ST20_DT10_SE15_DE1_SK6-7 ST20_DT10_SE5_DE1_SK4-5 ST20_DT10_SE5_DE1_SK6-7 ST30_DT10_SE10_DE1_SK4-5 ST30_DT10_SE10_DE1_SK6-7 ST30_DT10_SE15_DE1_SK4-5 ST30_DT10_SE15_DE1_SK6-7 ST30_DT10_SE5_DE1_SK4-5 ST30_DT10_SE5_DE1_SK6-7";
        List<String> alg = new ArrayList<String>(7);
//hv
//        alg.add("CMODESDEDynamic 1.26E+00 1.28E+00 1.30E+00 1.24E+00 1.32E+00 1.27E+00 1.29E+00 1.28E+00 1.24E+00 1.23E+00 1.25E+00 1.30E+00 1.32E+00 1.26E+00 1.24E+00 1.24E+00 1.14E+00 1.21E+00 2.73E-01 2.72E-01 2.18E-01 2.55E-01 2.64E-01 2.80E-01 3.03E-01 2.87E-01 3.01E-01 2.80E-01 2.73E-01 2.70E-01 2.36E-01 2.80E-01 3.07E-01 3.14E-01 2.68E-01 2.67E-01");
//        alg.add("CMODESDEExternalDynamic 1.21E+00 1.26E+00 1.29E+00 1.21E+00 1.25E+00 1.20E+00 1.24E+00 1.18E+00 1.20E+00 1.20E+00 1.14E+00 1.22E+00 1.26E+00 1.17E+00 1.20E+00 1.22E+00 1.03E+00 1.11E+00 2.58E-01 2.60E-01 1.98E-01 2.40E-01 2.66E-01 2.88E-01 2.90E-01 3.14E-01 2.94E-01 2.92E-01 3.30E-01 3.08E-01 2.39E-01 3.12E-01 2.94E-01 3.03E-01 2.81E-01 2.79E-01");
//        alg.add("CMODESDEExternalReDynamic 1.21E+00 1.26E+00 1.29E+00 1.20E+00 1.24E+00 1.18E+00 1.23E+00 1.17E+00 1.19E+00 1.19E+00 1.13E+00 1.22E+00 1.27E+00 1.18E+00 1.20E+00 1.23E+00 1.04E+00 1.11E+00 2.56E-01 2.76E-01 1.98E-01 2.50E-01 2.69E-01 3.07E-01 2.91E-01 3.14E-01 2.90E-01 2.89E-01 3.35E-01 3.04E-01 2.40E-01 3.14E-01 3.00E-01 3.03E-01 2.88E-01 2.74E-01");
//        alg.add("CMODESDEFullDynamic 1.25E+00 1.29E+00 1.31E+00 1.23E+00 1.32E+00 1.27E+00 1.29E+00 1.26E+00 1.24E+00 1.24E+00 1.24E+00 1.29E+00 1.32E+00 1.25E+00 1.25E+00 1.25E+00 1.14E+00 1.21E+00 2.68E-01 2.75E-01 2.27E-01 2.51E-01 2.65E-01 2.80E-01 3.00E-01 2.87E-01 2.99E-01 2.72E-01 2.73E-01 2.76E-01 2.31E-01 2.84E-01 3.01E-01 3.04E-01 2.74E-01 2.59E-01");
//        alg.add("CMODESDEFullReDynamic 1.25E+00 1.28E+00 1.30E+00 1.22E+00 1.32E+00 1.26E+00 1.27E+00 1.25E+00 1.22E+00 1.21E+00 1.24E+00 1.29E+00 1.31E+00 1.23E+00 1.24E+00 1.23E+00 1.11E+00 1.17E+00 2.80E-01 2.83E-01 2.15E-01 2.57E-01 2.64E-01 2.82E-01 3.11E-01 2.97E-01 3.11E-01 2.98E-01 2.78E-01 2.71E-01 2.44E-01 2.93E-01 3.06E-01 3.21E-01 2.77E-01 2.68E-01");
//        alg.add("CMODESDERepairDynamic 1.31E+00 1.37E+00 1.42E+00 1.29E+00 1.35E+00 1.26E+00 1.38E+00 1.30E+00 1.30E+00 1.26E+00 1.18E+00 1.28E+00 1.34E+00 1.24E+00 1.30E+00 1.27E+00 1.19E+00 1.18E+00 2.28E-01 1.88E-01 1.45E-01 2.22E-01 2.09E-01 2.82E-01 1.95E-01 2.35E-01 2.48E-01 2.54E-01 2.41E-01 2.33E-01 2.18E-01 2.45E-01 2.49E-01 2.97E-01 1.80E-01 1.88E-01");
//        alg.add("NSGAIIIDynamic 1.23E+00 1.30E+00 1.41E+00 1.22E+00 1.35E+00 1.24E+00 1.31E+00 1.24E+00 1.26E+00 1.20E+00 1.12E+00 1.24E+00 1.30E+00 1.20E+00 1.28E+00 1.24E+00 1.16E+00 1.10E+00 2.60E-01 2.58E-01 1.71E-01 2.64E-01 2.03E-01 2.83E-01 2.60E-01 2.76E-01 2.47E-01 2.93E-01 2.93E-01 2.68E-01 2.19E-01 2.90E-01 2.68E-01 3.09E-01 2.01E-01 2.22E-01");
//acc        
//        alg.add("CMODESDEDynamic 8.92E-01 9.07E-01 9.51E-01 8.94E-01 9.28E-01 9.01E-01 9.32E-01 9.45E-01 9.30E-01 9.39E-01 9.19E-01 9.67E-01 9.61E-01 9.57E-01 9.52E-01 9.32E-01 9.09E-01 9.39E-01 1.52E-01 1.48E-01 9.80E-02 1.31E-01 1.27E-01 1.44E-01 1.34E-01 1.04E-01 1.31E-01 1.12E-01 1.06E-01 8.20E-02 8.59E-02 9.50E-02 9.78E-02 1.31E-01 1.29E-01 1.04E-01");
//        alg.add("CMODESDEExternalDynamic 8.69E-01 9.01E-01 9.53E-01 8.85E-01 9.03E-01 8.73E-01 9.26E-01 9.09E-01 9.19E-01 9.23E-01 8.81E-01 9.42E-01 9.51E-01 9.28E-01 9.57E-01 9.34E-01 8.76E-01 9.13E-01 1.47E-01 1.41E-01 8.05E-02 1.21E-01 1.27E-01 1.54E-01 1.18E-01 1.26E-01 1.20E-01 1.15E-01 1.55E-01 1.00E-01 8.54E-02 1.23E-01 7.76E-02 1.15E-01 1.58E-01 1.18E-01");
//        alg.add("CMODESDEExternalReDynamic 8.71E-01 8.95E-01 9.53E-01 8.80E-01 9.00E-01 8.60E-01 9.25E-01 9.10E-01 9.20E-01 9.24E-01 8.76E-01 9.44E-01 9.52E-01 9.26E-01 9.55E-01 9.37E-01 8.77E-01 9.16E-01 1.44E-01 1.53E-01 8.18E-02 1.28E-01 1.30E-01 1.68E-01 1.19E-01 1.25E-01 1.18E-01 1.14E-01 1.60E-01 9.71E-02 8.35E-02 1.26E-01 7.98E-02 1.14E-01 1.56E-01 1.14E-01");
//        alg.add("CMODESDEFullDynamic 8.91E-01 9.05E-01 9.51E-01 8.95E-01 9.27E-01 9.04E-01 9.34E-01 9.42E-01 9.31E-01 9.46E-01 9.18E-01 9.63E-01 9.63E-01 9.53E-01 9.54E-01 9.38E-01 9.08E-01 9.42E-01 1.51E-01 1.50E-01 1.04E-01 1.29E-01 1.28E-01 1.42E-01 1.34E-01 1.04E-01 1.32E-01 1.06E-01 1.11E-01 8.62E-02 8.31E-02 9.83E-02 9.80E-02 1.24E-01 1.32E-01 9.70E-02");
//        alg.add("CMODESDEFullReDynamic 8.86E-01 9.01E-01 9.53E-01 8.86E-01 9.28E-01 8.97E-01 9.26E-01 9.35E-01 9.23E-01 9.25E-01 9.15E-01 9.63E-01 9.58E-01 9.46E-01 9.52E-01 9.27E-01 8.90E-01 9.21E-01 1.57E-01 1.56E-01 9.23E-02 1.36E-01 1.27E-01 1.47E-01 1.41E-01 1.11E-01 1.42E-01 1.26E-01 1.13E-01 8.15E-02 9.28E-02 1.09E-01 9.66E-02 1.37E-01 1.44E-01 1.13E-01");
//        alg.add("CMODESDERepairDynamic 9.25E-01 9.55E-01 9.87E-01 9.23E-01 9.52E-01 9.01E-01 9.81E-01 9.67E-01 9.63E-01 9.55E-01 9.29E-01 9.71E-01 9.70E-01 9.64E-01 9.81E-01 9.47E-01 9.68E-01 9.61E-01 1.17E-01 7.69E-02 2.83E-02 9.82E-02 7.51E-02 1.44E-01 3.93E-02 4.74E-02 7.22E-02 7.61E-02 8.77E-02 5.50E-02 5.90E-02 7.21E-02 4.23E-02 1.08E-01 4.74E-02 4.76E-02");
//        alg.add("NSGAIIIDynamic 8.85E-01 9.14E-01 9.84E-01 8.90E-01 9.58E-01 8.93E-01 9.59E-01 9.50E-01 9.62E-01 9.32E-01 8.90E-01 9.61E-01 9.71E-01 9.49E-01 9.83E-01 9.46E-01 9.53E-01 9.31E-01 1.45E-01 1.34E-01 3.63E-02 1.29E-01 7.04E-02 1.47E-01 8.89E-02 7.80E-02 6.32E-02 1.02E-01 1.25E-01 6.59E-02 5.07E-02 9.32E-02 3.70E-02 1.01E-01 6.21E-02 7.85E-02");
//stab     
        alg.add("CMODESDEDynamic 1.14E-01 1.12E-01 1.44E-01 1.64E-01 1.23E-01 1.23E-01 2.41E-01 1.70E-01 2.43E-01 1.64E-01 1.12E-01 1.00E-01 2.39E-01 2.03E-01 1.79E-01 1.98E-01 9.53E-02 1.33E-01 7.69E-01 7.80E-01 8.87E-01 9.68E-01 8.04E-01 8.22E-01 1.21E+00 9.84E-01 1.20E+00 9.52E-01 6.79E-01 7.59E-01 1.23E+00 1.12E+00 1.04E+00 1.10E+00 6.52E-01 8.78E-01");
        alg.add("CMODESDEExternalDynamic 1.06E-01 1.17E-01 1.43E-01 1.71E-01 1.16E-01 8.28E-02 1.58E-01 1.28E-01 1.62E-01 1.94E-01 1.19E-01 1.06E-01 1.66E-01 1.88E-01 1.63E-01 2.05E-01 5.79E-02 1.03E-01 7.84E-01 8.49E-01 9.09E-01 1.00E+00 8.02E-01 6.53E-01 9.73E-01 8.43E-01 9.93E-01 1.08E+00 8.24E-01 7.38E-01 1.00E+00 1.08E+00 9.97E-01 1.16E+00 5.08E-01 7.57E-01");
        alg.add("CMODESDEExternalReDynamic 9.83E-02 1.41E-01 1.05E-01 1.42E-01 1.02E-01 6.75E-02 1.81E-01 1.47E-01 1.34E-01 1.71E-01 6.73E-02 1.24E-01 1.59E-01 1.71E-01 1.59E-01 1.63E-01 9.38E-02 6.05E-02 7.22E-01 9.07E-01 7.46E-01 9.31E-01 6.96E-01 5.47E-01 1.05E+00 9.55E-01 8.67E-01 1.04E+00 5.17E-01 8.51E-01 9.64E-01 9.98E-01 9.68E-01 9.83E-01 7.37E-01 5.52E-01");
        alg.add("CMODESDEFullDynamic 1.45E-01 1.44E-01 1.57E-01 2.04E-01 1.54E-01 5.71E-02 2.14E-01 1.69E-01 2.55E-01 1.90E-01 1.36E-01 8.44E-02 1.54E-01 2.36E-01 2.22E-01 1.83E-01 1.16E-01 9.86E-02 9.33E-01 9.32E-01 9.40E-01 1.08E+00 9.30E-01 4.04E-01 1.15E+00 9.89E-01 1.22E+00 1.05E+00 8.75E-01 6.84E-01 9.49E-01 1.19E+00 1.15E+00 1.05E+00 8.00E-01 7.66E-01");
        alg.add("CMODESDEFullReDynamic 1.23E-01 1.71E-01 1.43E-01 1.43E-01 1.41E-01 9.41E-02 1.96E-01 1.71E-01 2.28E-01 1.79E-01 1.61E-01 7.78E-02 2.12E-01 1.95E-01 2.12E-01 1.87E-01 8.46E-02 8.21E-02 8.08E-01 1.01E+00 9.34E-01 8.74E-01 9.27E-01 6.86E-01 1.09E+00 1.01E+00 1.16E+00 1.03E+00 9.34E-01 6.02E-01 1.13E+00 1.12E+00 1.12E+00 1.03E+00 5.63E-01 6.06E-01");
        alg.add("CMODESDERepairDynamic 1.63E-01 1.71E-01 2.69E-01 1.80E-01 1.10E-01 1.26E-01 2.20E-01 1.63E-01 2.66E-01 2.40E-01 8.97E-02 1.08E-01 1.96E-01 1.85E-01 2.35E-01 2.99E-01 1.25E-01 1.09E-01 9.96E-01 1.02E+00 1.31E+00 9.91E-01 7.64E-01 8.73E-01 1.18E+00 9.91E-01 1.29E+00 1.21E+00 6.82E-01 7.63E-01 1.12E+00 1.12E+00 1.23E+00 1.37E+00 8.73E-01 8.08E-01");
        alg.add("NSGAIIIDynamic 1.54E-01 1.87E-01 4.63E-01 1.77E-01 1.62E-01 1.19E-01 2.40E-01 1.76E-01 2.67E-01 1.91E-01 1.28E-01 1.17E-01 2.31E-01 1.51E-01 2.88E-01 2.69E-01 9.31E-02 7.61E-02 9.52E-01 1.08E+00 1.58E+00 1.05E+00 9.96E-01 8.02E-01 1.22E+00 1.03E+00 1.28E+00 1.10E+00 8.68E-01 8.30E-01 1.20E+00 9.50E-01 1.39E+00 1.30E+00 7.54E-01 6.47E-01");
        String[] instances = instance.split(" ");
        String[][] algo= new String[7][];
        int x = 0;
        for(String s: alg) {
        	algo[x++] = s.split(" ");
        }
        
        List<String> table = new ArrayList<String>();
        for(int i = 0; i < instances.length; i++) {
        	StringBuilder sb = new StringBuilder("\\texttt{"+instances[i]+"}");
        	sb.append(SEPARATOR);
        	for(String[] al: algo) {
        		sb.append(al[i+1]);
        		sb.append(" (" + al[i+19] + ")");
        		sb.append(SEPARATOR);
        	}
        	sb.deleteCharAt(sb.lastIndexOf("&"));
        	sb.append("\\\\");
        	table.add(sb.toString());
        }
        
        Collections.sort(table, new Comparator<String>() {

			@Override
			public int compare(String s1, String s2) {
				String inst1 = s1.split(SEPARATOR)[0];
				String inst2 = s2.split(SEPARATOR)[0];
				String[] v1 = inst1.replaceAll("[A-Za-z]", "").replace("\\", "")
									.replace("{", "").replace("}", "").replace("-", "").split("_");
				String[] v2 = inst2.replaceAll("[A-Za-z]", "").replace("\\", "")
									.replace("{", "").replace("}", "").replace("-", "").split("_");
				
				int comp1 = Integer.valueOf(v1[0]).compareTo(Integer.valueOf(v2[0]));
				if(comp1 != 0) {
					return comp1;
				}
				
				int comp2 = Integer.valueOf(v1[4]).compareTo(Integer.valueOf(v2[4]));
				if(comp2 != 0) {
					return comp2;
				}
				
				return Integer.valueOf(v1[2]).compareTo(Integer.valueOf(v2[2]));
			}
		});
        
        for(String s: table) {
        	System.out.println(s);
        }
    }
}
